NOAI_join_war_interaction = {
	category = interaction_category_diplomacy
	interface = interfere_in_war
	#special_interaction = interfere_in_war_interaction
	popup_on_receive = yes
	desc = join_war_interaction_desc

	greeting = positive
	notification_text = join_war_interaction_notification

	is_shown = {
		scope:recipient = {
			is_at_war = yes
			NOR = {
				this = scope:actor
				is_at_war_with = scope:actor
			}
		}
	}

	is_valid_showing_failures_only = {
        scope:actor = { is_ai = yes }

		# recipient is liege
		trigger_if = {
			custom_description = {
				text = join_war_interaction_recipient_not_liege
				subject = scope:recipient
				scope:actor = {
					target_is_liege_or_above = scope:recipient
				}
			}
		}
	}
	
	can_be_picked = {
		exists = scope:recipient.var:NOAI_claimant_war_scope
		scope:recipient.var:NOAI_claimant_war_scope = {

			# recipient is war leader
			is_war_leader = scope:recipient


			# ...otherwise, recipient must be an ally...
			trigger_if = {
				limit = {
					is_religious_war = no
					scope:actor = { NOT = { target_is_liege_or_above = scope:recipient } }
				}
				custom_description = {
					text = join_war_interaction_recipient_not_ally
					subject = scope:recipient
					scope:actor = {
						is_allied_to = scope:recipient
					}
				}
				trigger_if = {
					limit = {
						scope:actor = {
							target_is_vassal_or_below = scope:recipient
							NOT = { is_allied_to = scope:recipient }
						}
					}
					# If they are an unallied vassal, inform the player that we could have aided them if this was a peasant revolt.
					custom_description = {
						text = join_war_interaction_recipient_not_fighting_peasant_faction
						subject = scope:recipient
						primary_defender = scope:recipient
						primary_attacker = {
							is_leading_faction_type = peasant_faction
						}
					}
				}
			}

			# ...or our liege.
			trigger_else_if = {
				limit = {
					is_religious_war = no
					scope:actor = { NOT = { is_allied_to = scope:recipient } }
				}
				# recipient is liege
				custom_description = {
					text = join_war_interaction_recipient_not_liege
					subject = scope:recipient
					scope:actor = {
						target_is_liege_or_above = scope:recipient
					}
				}
			}
			# making the default behavior explicit if no other trigger_(else_)ifs are valid
			trigger_else = {
				always = yes
			}
		}

		joiner_not_already_in_another_war_with_any_target_war_participants_trigger = {
			WARRIOR = scope:recipient
			JOINER = scope:actor
		}

		can_join_war_liege_vassal_check_trigger = { WARRIOR = scope:recipient JOINER = scope:actor }
	}

	on_accept = {
		scope:recipient.var:NOAI_claimant_war_scope = {
			hidden_effect = {
				set_called_to = scope:actor
			}
			if = {
				limit = {
					is_attacker = scope:recipient
				}
				add_attacker = scope:actor
			}
			else = {
				add_defender = scope:actor
			}
		}
		scope:actor = {
			stress_impact = {
				craven = medium_stress_impact_gain
				shy = minor_stress_impact_gain
			}
		}
		scope:recipient = {
			if = {
				limit = {
					is_ai = yes
				}
				progress_towards_friend_effect = {
					CHARACTER = scope:actor
					OPINION = no
				}
			}
			else = {
				hidden_effect = { #To nudge friendship
					if = {
						limit = {
							NOR = {
								has_relation_friend = scope:actor
								has_relation_potential_friend = scope:actor
							}
						}
						set_relation_potential_friend = scope:actor
					}
				}
			}
		}
	}

	on_decline = {
		scope:actor = {
			trigger_event = char_interaction.0236
		}
	}

	auto_accept = yes

	ai_accept = {
		base = 100 # everyone wants help
	}
}
